<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MLPen.ModernUI.Assets.Controls"
                    xmlns:ui="clr-namespace:MLPen.ModernUI.Windows.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MLPen.ModernUI;component/Assets/Styles/Colors.xaml" />
        <ResourceDictionary Source="/MLPen.ModernUI;component/Assets/Styles/Fonts.xaml" />
        <ResourceDictionary Source="/MLPen.ModernUI;component/Assets/Styles/Default.xaml" />
        <ResourceDictionary Source="/MLPen.ModernUI;component/Assets/Controls/IconFont.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Combox右侧下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--下拉按钮内部背景色-->
                    <Border x:Name="Back" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <!--下拉按钮内边框-->
                        <Path x:Name="PathFill" 
                              Data="M30.587915,0L31.995998,1.4199842 15.949964,17.351 0,1.4979873 1.4099131,0.078979151 15.949964,14.53102z" 
                              RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" 
                              Height="8" 
                              Stretch="Fill" 
                              Width="16">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="{DynamicResource PrimaryBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Combox-->
    <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="30"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent">
                                    <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" ></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="TextElement.Foreground" Value="{StaticResource PrimaryBrush}"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!--文字区域背景和边线样式-->
                        <TextBox Padding="5,0,0,0" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}" Style="{DynamicResource TextBoxCenter}"/>
                        <Border BorderThickness="1,1,0,1" BorderBrush="{DynamicResource BorderBrush}"></Border>
                        <!--右侧下拉button设置-->
                        <Border Grid.Column="1" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,1,1" Background="{DynamicResource WhiteBrush}">
                            <ToggleButton x:Name="toggle" Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Width="39" Height="38" ClickMode="Press" Background="Transparent"/>
                        </Border>
                        <!--弹出popup整体设置-->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                            <!--弹出popup边框-->
                            <Border BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource WhiteBrush}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.4"/>
                                </Border.Effect>
                                <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                                <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" TargetName="toggle" Value="{DynamicResource PrimaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>